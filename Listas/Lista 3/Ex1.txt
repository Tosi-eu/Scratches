abstract class Veiculo {
    public abstract void listarVerificacoes();
    public abstract void ajustar();
    public abstract void limpar();
}

class Bicicleta extends Veiculo {
    public void listarVerificacoes() {
        System.out.println("Verificar freios e pneus.");
    }
    public void ajustar() {
        System.out.println("Ajustar posição do selim e guidão.");
    }
    public void limpar() {
        System.out.println("Limpar a bicicleta com água e sabão.");
    }
    public void engraxarCorrente() {
        System.out.println("Engraxando corrente da bicicleta.");
    }
}

class Automovel extends Veiculo {
    public void listarVerificacoes() {
        System.out.println("Verificar óleo, freios e pneus.");
    }
    public void ajustar() {
        System.out.println("Ajustar posição do banco e dos espelhos retrovisores.");
    }
    public void limpar() {
        System.out.println("Lavando carro com água e detergente.");
    }
    public void trocarOleo() {
        System.out.println("Trocando óleo do motor do automóvel.");
    }
}

class Oficina {
    private Veiculo[] veiculos;
    private int index;
    
    public Oficina() {
        veiculos = new Veiculo[4];
        veiculos[0] = new Bicicleta();
        veiculos[1] = new Bicicleta();
        veiculos[2] = new Automovel();
        veiculos[3] = new Automovel();
        index = -1;
    }
    
    public Veiculo proximo() {
        if (index < veiculos.length - 1) {
            index++;
        } else {
            index = 0;
        }
        return veiculos[index];
    }
    
    public void manutencao(Veiculo v) {
        v.listarVerificacoes();
        v.ajustar();
        v.limpar();
        if (v instanceof Automovel) {
            ((Automovel) v).trocarOleo();
        } else if (v instanceof Bicicleta) {
            ((Bicicleta) v).engraxarCorrente();
        }
    }
}

public class Teste {
    public static void main(String[] args) {
        Oficina o = new Oficina();
        Veiculo v;
        for (int i = 0; i < 4; i++) {
            v = o.proximo();
            o.manutencao(v);
            System.out.println();
        }
    }
}
